// Mocks generated by Mockito 5.4.6 from annotations
// in twitter_api_v2/test/mocks/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:twitter_api_v2/src/core/client/client_context.dart' as _i3;
import 'package:twitter_api_v2/src/service/response/twitter_response.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTwitterResponse_0<D1, M1> extends _i1.SmartFake
    implements _i2.TwitterResponse<D1, M1> {
  _FakeTwitterResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClientContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientContext extends _i1.Mock implements _i3.ClientContext {
  MockClientContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AuthenticationType get authenticationType => (super.noSuchMethod(
        Invocation.getter(#authenticationType),
        returnValue: _i3.AuthenticationType.oauth1,
      ) as _i3.AuthenticationType);

  @override
  _i4.Future<_i2.TwitterResponse<D, M>> get<D, M>(
    Uri? uri, {
    required D Function(Map<String, dynamic>)? fromJsonData,
    M Function(Map<String, dynamic>)? fromJsonMeta,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [uri],
          {
            #fromJsonData: fromJsonData,
            #fromJsonMeta: fromJsonMeta,
          },
        ),
        returnValue: _i4.Future<_i2.TwitterResponse<D, M>>.value(
            _FakeTwitterResponse_0<D, M>(
          this,
          Invocation.method(
            #get,
            [uri],
            {
              #fromJsonData: fromJsonData,
              #fromJsonMeta: fromJsonMeta,
            },
          ),
        )),
      ) as _i4.Future<_i2.TwitterResponse<D, M>>);

  @override
  _i4.Future<_i2.TwitterResponse<D, M>> post<D, M>(
    Uri? uri, {
    required D Function(Map<String, dynamic>)? fromJsonData,
    M Function(Map<String, dynamic>)? fromJsonMeta,
    Map<String, String>? headers,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [uri],
          {
            #fromJsonData: fromJsonData,
            #fromJsonMeta: fromJsonMeta,
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i4.Future<_i2.TwitterResponse<D, M>>.value(
            _FakeTwitterResponse_0<D, M>(
          this,
          Invocation.method(
            #post,
            [uri],
            {
              #fromJsonData: fromJsonData,
              #fromJsonMeta: fromJsonMeta,
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i4.Future<_i2.TwitterResponse<D, M>>);

  @override
  _i4.Future<_i2.TwitterResponse<D, M>> postMultipart<D, M>(
    Uri? uri, {
    required D Function(Map<String, dynamic>)? fromJsonData,
    M Function(Map<String, dynamic>)? fromJsonMeta,
    List<_i5.MultipartFile>? files,
    Map<String, String>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postMultipart,
          [uri],
          {
            #fromJsonData: fromJsonData,
            #fromJsonMeta: fromJsonMeta,
            #files: files,
            #data: data,
          },
        ),
        returnValue: _i4.Future<_i2.TwitterResponse<D, M>>.value(
            _FakeTwitterResponse_0<D, M>(
          this,
          Invocation.method(
            #postMultipart,
            [uri],
            {
              #fromJsonData: fromJsonData,
              #fromJsonMeta: fromJsonMeta,
              #files: files,
              #data: data,
            },
          ),
        )),
      ) as _i4.Future<_i2.TwitterResponse<D, M>>);

  @override
  _i4.Future<_i2.TwitterResponse<D, M>> delete<D, M>(
    Uri? uri, {
    required D Function(Map<String, dynamic>)? fromJsonData,
    M Function(Map<String, dynamic>)? fromJsonMeta,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uri],
          {
            #fromJsonData: fromJsonData,
            #fromJsonMeta: fromJsonMeta,
          },
        ),
        returnValue: _i4.Future<_i2.TwitterResponse<D, M>>.value(
            _FakeTwitterResponse_0<D, M>(
          this,
          Invocation.method(
            #delete,
            [uri],
            {
              #fromJsonData: fromJsonData,
              #fromJsonMeta: fromJsonMeta,
            },
          ),
        )),
      ) as _i4.Future<_i2.TwitterResponse<D, M>>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
