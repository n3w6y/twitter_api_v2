# This file configures the static analysis results for your project (errors,
# warnings, and lints).
#
# This enables the 'recommended' set of lints from `package:lints`.
# This set helps identify many issues that may lead to problems when running
# or consuming Dart code, and enforces writing Dart using a single, idiomatic
# style and format.
#
# If you want a smaller set of lints you can change this to specify
# 'package:lints/core.yaml'. These are just the most critical lints
# (the recommended set includes the core lints).
# The core lints are also what is used by pub.dev for scoring packages.

include: package:lints/recommended.yaml

analyzer:
  exclude:
    - "**/*.freezed.dart"
    - "**/*.g.dart"

# analyzer:
#  language:
#    strict-casts: true
#    strict-inference: true
#    strict-raw-types: true

  errors:
    invalid_annotation_target: ignore

linter:
  rules:
    - always_declare_return_types
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_returning_null_for_void
    - avoid_types_as_parameter_names
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - constant_identifier_names
    - control_flow_in_finally
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_check_on_nullable_type_parameter
    - package_names
    - prefer_final_fields
    - prefer_final_locals
    - prefer_is_not_empty
    - prefer_void_to_null
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_const
    - unnecessary_new
    - unrelated_type_equality_checks
    - use_rethrow_when_possible
    - valid_regexps